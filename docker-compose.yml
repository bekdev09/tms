# version: "3.9"

services:
  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: myappdb
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./server/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  server:
    build: ./server
    container_name: server
    restart: always
    depends_on:
      - postgres
    networks:
      - app-network

  client:
    build: ./client
    container_name: client
    restart: always
    depends_on:
      - server
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    depends_on:
      - server
      - client
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./client/dist:/usr/share/nginx/html
    networks:
      - app-network

  dns:
    image: jpillora/dnsmasq
    container_name: dns
    restart: always
    cap_add:
      - NET_ADMIN
    volumes:
      - ./dns/dnsmasq.conf:/etc/dnsmasq.conf
    ports:
      - "53:53/udp"
    command: ["--address=/myapp.local/192.168.1.100"]
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
